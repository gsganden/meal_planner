name: CI and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: Run CI Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read .python-version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python ${{ steps.python-version.outputs.version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        run: pip install uv

      - name: Cache uv virtual environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ steps.python-version.outputs.version }}-uv-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.python-version.outputs.version }}-uv-

      - name: Install dependencies
        run: uv sync --frozen --compile-bytecode --all-groups

      - name: Run Ruff Formatter Check
        run: |
          source .venv/bin/activate
          ruff format --check .

      - name: Run Ruff Linter
        run: |
          source .venv/bin/activate
          ruff check .

      - name: Run Pytest with Coverage
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          source .venv/bin/activate
          pytest --cov=meal_planner --runslow --reruns=1

  deploy:
    name: Deploy Modal App
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: ci
    runs-on: ubuntu-latest
    env:
      MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
      MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read .python-version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python ${{ steps.python-version.outputs.version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        run: pip install uv

      - name: Cache uv virtual environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ steps.python-version.outputs.version }}-uv-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.python-version.outputs.version }}-uv-

      - name: Install dependencies
        run: uv sync --frozen --compile-bytecode

      - name: Deploy to Modal
        run: |
          source .venv/bin/activate
          modal deploy deploy.py

      - name: Run Database Migrations
        run: |
          source .venv/bin/activate
          modal run deploy.py::migrate_db
